% MWEs, singletons and head-subcategorization grammar
%    as reported in Formal Grammar 2018 Paper.
% I use example numbers in the paper as mock POS tags for easy reference.
% fg2018.testsuite.lisp file refers to sample derivations by example numbers too.
% One local convention: I write event modalities as `_ x' in an LF,
%   so p _ x y has *one* argument, y, not two, in the predicate argument 
%   structure of p.  x is the event modality of p. This is just a convention.
% -Cem Bozsahin March 2018

hits 1a := (s\^np[agr=3s])/^np[spec=m] : \x\y.!hit x y;
hit  1b := vp[typ=inf]/^np[spec=m] : \x\y.!hit x y;
target 2 := n[h=target]: !target;
john 3  := np : !j;
persuaded 3 := ((s\^np)/vp[typ=to-inf])/^np : \x\p\y.!persuade (p x) x y;
mary 3 := np : !m;
to 3 := vp[typ=to-inf]/^vp[typ=inf] : \p. p;
Harry 3 := np : !h;
picked 7a := (s\^np)/"up"/^np : \y\x\z.!cause (!init (!hold _ x y z)) z;
kicked 7b := (s\^np)/"the bucket" : \x\y.!die _ x y;
kicked 13 := (s\^np)/^np[spec=m] : \x\y.!kick x y;
did 13 := (s\^np)/^vp[typ=inf] : \p\x.!did (p x);
"every which way" 10a := (s\np)\^(s\np) : \p\x.!omni p x;
"every which way" 10b := "every which way" : !omniway;
scored 11a := (s\^np)/"every which way" : \x\y.!score _ x y;
my 11a := np/*n: \x.!my x;
team 11a := n[h=team] : !team;
every 11c := a/*b : \p.p;
which 11c := b/*c : \p.p;
way 11c := c : !c;
kick 13 := vp[typ=inf]/"the bucket" : \x\y.!die _ x y;
kick 13 := vp[typ=inf]/^np[spec=m] : \x\y.!kick x y;
and 13 := (@x\*@x)/*@x : \p\q\x.!and (p x) (q x);
Mary 13 := s/(s\np): \p.p !m;
John 13 := s/(s\np): \p.p !j;
not 13 := vp[type=inf]/^vp[typ=inf] : \p\x.!not (p x);
the 13 := np[h=?x]/*n[h=?x] : \x.!def x;
bucket 13 := n[h=bucket] : !bucket;
picked 14a := (s\^np)/"up"/^np[heavy=m] : \y\x\z.!cause (!init(!hold _ x y z)) z;
picked 14b := (s\^np)/^np[lexc=p]/"up" : \x\y\z.!pick _ x y z;
picked 14c := (s\^np)/^np[spec=m] : \x\y.!choose x y;
I 15 := np[agr=1s] : !i;
book 15 := n[h=book] : !book;
up 15 := ((s\np)\(s\np))/^np : \x\p\y.!up (p y) x;
that 17a := (n[h=?x]\n[h=?x])/*(s/np[spec=?pm]) : \p\q\x.!and (p x)(q x);
dragged 18 := (s\^np)/^np[spec=m]: \x\y.!drag x y;
shoot 19 := vp[typ=inf]/"the breeze" : \x\y.!smalltalk _x !one y;
spill 20a := vp[typ=inf]/^np[h=beans,spec=p] : \x\y.!reveal _ x !secret y;
spilled 20af := (s\^np)/^np[h=beans,spec=p] : \x\y.!reveal _ x !secret y;
spill 20b := vp[typ=inf]/^np : \x\y.!if head (x) eq !beans !then !reveal _ x !secret y
					     !else !spill x y;
spill 20c := vp[typ=inf]/"beans"/PredP : \p\x\y.!reveal _ (p x) !secret y;
spill 20d := vp[typ=inf]/^np[spec=m] : \x\y.!spill x y;
spilled 21 := (s\^np)/^np[spec=m] : \x\y.!spill x y;
you 22 := s/(s\np): \p.p !you;
cooked 22 := (s\^np)/^np[spec=m] : \x\y.!cook x y;
beans 22 := n[h=beans] : !beans;
give 28c := vp/n[h=creeps]/"the"/^np : \x\y\z\w.!cause (!init (!revulse _ z !fear _ y x)) w;
twiddled 29 := (s\np[agr=?a])/"thumbs"/np[lexc=m,poss=p,agr=?a]
                  : \x\y\z.!and (!pass _y !time _ (!self z) z)(!inalien x y z);
my 29 := np[lexc=m,agr=1s] : !poss;
his 29 := np[lexc=m,agr=3s] : !poss;
thumbs 29 := dummy : !thumbs;
persuade 32c := vp[typ=inf]/*vp[typ=to-inf]/*np : \x\p\y.!persuade (p x) x y;
John 32c := np : !j;
do 32c := vp/^np : \x\y.!do x y;
dishes 32c := n[h=dishes] : !dishes;
easily 32c := vp\^vp : \p\x.!easy (p x);
at 21a := (s/^s)/"any rate" : \x\s.!more !exactly s _ x;
at 21b := (s\^s)/"any rate" : \x\s.!contrastwith _ x  s;
any 21 := dummy/dummy : \x. !any x;
rate 21 := dummy : !rate;
